KCPSM6 Assembler log file for program 'C:\Users\Jacky\FPGA_Space_Invaders\software\software.psm'.
Generated by KCPSM6 version v2.51
Ken Chapman - Xilinx Ltd - 29th May 2013

Assembly datestamp: 07 Dec 2016
Assembly timestamp: 04:01:21

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 7FF hex
Nominal program memory size: 2K (2048)   address(10:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 1039
Memory locations available: 3057


Assembly listing

 Addr Code                            Instruction

 000                                  ;;============================================================================
 000                                  ;; File: software.psm
 000                                  ;; This is the PicoBlaze example game program for EE178 Lab #8.
 000                                  ;; No guarantee this is bug-free but it is a playable example.
 000                                  ;;============================================================================
 000                                  ;;============================================================================
 000                                  ;; Editor: Thi Le
 000                                  ;; Current Version: 1.4
 000                                  ;; Change Log: 1.0 - initial file provided
 000                                  ;;      1.1 - replaced padl with tank and cleaned up code
 000                                  ;;      1.2 - added in bullet, bullet shooting, and bullet resetting
 000                                  ;;      1.3 - added in shield drawings
 000                                  ;;      1.4 - completion of shield hit detection and bullet reset
 000                                  ;;============================================================================
 000                                  ;;============================================================================
 000                                  ;; Ports and related constants.
 000                                  ;;============================================================================
 000                                  CONSTANT stax, 00                          ; port for 8-bit start-x
 000                                  CONSTANT stay, 01                          ; port for 8-bit start-y
 000                                  CONSTANT endx, 02                          ; port for 8-bit end-x
 000                                  CONSTANT endy, 03                          ; port for 8-bit end-y
 000                                  CONSTANT busy, 04                          ; port for 8-bit busy
 000                                  CONSTANT beam, 05                          ; port for 8-bit beam
 000                                  CONSTANT mode, 06                          ; port for 8-bit mode
 000                                  CONSTANT prng, 07                          ; port for 8-bit prng
 000                                  CONSTANT leds_lo, 08                       ; port for 8-bit led data out
 000                                  CONSTANT leds_hi, 09                       ; port for 8-bit led data out
 000                                  CONSTANT qssd_lo, 0A                       ; port for 8-bit qssd data out
 000                                  CONSTANT qssd_hi, 0B                       ; port for 8-bit qssd data out
 000                                  CONSTANT qssd_dp, 0C                       ; port for 8-bit qssd data out
 000                                  CONSTANT switches_lo, 0D                   ; port for 8-bit switch input
 000                                  CONSTANT switches_hi, 0E                   ; port for 8-bit switch input
 000                                  CONSTANT buttons, 0F                       ; port for 8-bit button input
 000                                  CONSTANT busy_go, 01                       ; go command and busy status
 000                                  CONSTANT beam_hi, 0F                       ; beam high intensity
 000                                  CONSTANT beam_md, 07                       ; beam med intensity
 000                                  CONSTANT beam_lo, 03                       ; beam low intensity
 000                                  CONSTANT mode_hld, 00                      ; mode hold framebuffer
 000                                  CONSTANT mode_clr, 01                      ; mode clear framebuffer
 000                                  CONSTANT mode_lin, 02                      ; mode linear decay
 000                                  CONSTANT mode_exp, 03                      ; mode exponential decay
 000                                  CONSTANT buttons_ct, 10                    ; center
 000                                  CONSTANT buttons_up, 08                    ; up
 000                                  CONSTANT buttons_dn, 04                    ; down
 000                                  CONSTANT buttons_lf, 02                    ; left
 000                                  CONSTANT buttons_rt, 01                    ; right
 000                                  ;;============================================================================
 000                                  ;; Game state declarations.
 000                                  ;;============================================================================
 000                                  NAMEREG s0, gs_major
 000                                  CONSTANT gs_major_attrone, 00              ; state assignment
 000                                  CONSTANT gs_major_attrtwo, 01              ; state assignment
 000                                  CONSTANT gs_major_playing, 02              ; state assignment
 000                                  CONSTANT gs_major_gameend, 03              ; state assignment
 000                                  NAMEREG s1, gs_minor
 000                                  CONSTANT gs_minor_begins, 00               ; counter initialize
 000                                  CONSTANT gs_minor_twosec, 78               ; frame count about 2.0 secs
 000                                  CONSTANT gs_minor_onesec, 3C               ; frame count about 1.0 secs
 000                                  CONSTANT gs_minor_getrdy, 1E               ; frame count about 0.5 secs
 000                                  NAMEREG s2, gs_tbulletx
 000                                  NAMEREG s3, gs_tbullety
 000                                  NAMEREG s4, gs_tbulletdy
 000                                  CONSTANT gs_tbullet_xdim, 00               ; it's this plus 1
 000                                  CONSTANT gs_tbullet_ydim, 05               ; it's this plus 1
 000                                  CONSTANT gs_tbullet_speed, 08              ; pixels per frame
 000                                  NAMEREG s5, gs_tankx
 000                                  CONSTANT gs_tanky, F4                      ; tank y location
 000                                  CONSTANT gs_tank_xdim, 10                  ; it's this plus 1
 000                                  CONSTANT gs_tank_ydim, 08                  ; it's this plus 1
 000                                  CONSTANT gs_tank_speed, 02                 ; pixels per frame
 000                                  NAMEREG s6, shieldshp                      ; health register counter for 4 shields: 00 00 00 00
 000                                  CONSTANT shield1hit, 40                    ; add to shieldshp when shield 1 is hit: 01 00 00 00
 000                                  CONSTANT shield2hit, 10                    ; add to shieldshp when shield 2 is hit: 00 01 00 00
 000                                  CONSTANT shield3hit, 04                    ; add to shieldshp when shield 3 is hit: 00 00 01 00
 000                                  CONSTANT shield4hit, 01                    ; add to shieldshp when shield 4 is hit: 00 00 00 01
 000                                  CONSTANT shieldxdim, 18                    ; shield x dimension is 24 pixels
 000                                  CONSTANT shieldydim, 14                    ; shield y dimension is 20 pixels
 000                                  CONSTANT shield1x, 10                      ; shield 1 starts at x = 16
 000                                  CONSTANT shield2x, 52                      ; shield 2 starts at x = 82
 000                                  CONSTANT shield3x, 95                      ; shield 3 starts at x = 149
 000                                  CONSTANT shield4x, D7                      ; shield 4 starts at x = 215
 000                                  CONSTANT shieldy, E0                       ; shield starts at y = 224
 000                                  CONSTANT alien_x, 00                       ; scratchpad memory location
 000                                  CONSTANT alien_y, 01
 000                                  CONSTANT alien_1_hp, 02
 000                                  CONSTANT alien_2_hp, 03
 000                                  CONSTANT alien_3_hp, 04
 000                                  CONSTANT alien_4_hp, 05
 000                                  CONSTANT alien_5_hp, 06
 000                                  CONSTANT alien_x_dim, 08
 000                                  CONSTANT alien_y_dim, 02
 000                                  ;;============================================================================
 000                                  ;; Global variables.
 000                                  ;;============================================================================
 000                                  NAMEREG s7, resvd1                         ; reserved
 000                                  NAMEREG s8, resvd2                         ; reserved
 000                                  NAMEREG sC, resvd3                         ; reserved
 000                                  NAMEREG s9, xpos                           ; for drawing routines
 000                                  NAMEREG sA, ypos                           ; for drawing routines
 000                                  NAMEREG sB, tbullet_en                     ; for tank bullet enable
 000                                  NAMEREG sD, btnsamp                        ; button sample
 000                                  NAMEREG sE, loopvar                        ; for loops
 000                                  NAMEREG sF, scratch                        ; for scratch
 000                                  ;;============================================================================
 000                                  ;; Other stuff.
 000                                  ;;============================================================================
 000                                  CONSTANT minusone, FF                      ; minusone
 000                                  CONSTANT minusmax, 80                      ; minus 128
 000                                  CONSTANT plusmax, 7F                       ; plus 127
 000                                  CONSTANT zero, 00                          ; zero
 000                                  CONSTANT one, 01                           ; one
 000                                  ;;============================================================================
 000                                  ;; Boot.
 000                                  ;; This performs one-time initialization of the hardware and the game state.
 000                                  ;;============================================================================
 000                            boot: 
 000  20008                           CALL 008[hw_init]                          ; initial hardware setup
 001  20016                           CALL 016[gs_init]                          ; set initial game state
 002  28001                           ENABLE INTERRUPT                           ; enable vblnk interrupt
 003                                  ;;============================================================================
 003                                  ;; Main.
 003                                  ;; This is an empty loop, does nothing, waiting for interrupts to occur.
 003                                  ;;============================================================================
 003                            main: 
 003  22003                           JUMP 003[main]                             ; empty loop, does nothing
 004                                  ;;============================================================================
 004                                  ;; Interrupt.
 004                                  ;; This is the main game logic.  At each interrupt, the procedure is to read
 004                                  ;; the user input, calculate the next game state, and then draw the game
 004                                  ;; state on the display.
 004                                  ;;============================================================================
 004                             isr: 
 004  20027                           CALL 027[user_input]                       ; get the user input
 005  20029                           CALL 029[calc_next_gs]                     ; calculate next state
 006  200D6                           CALL 0D6[draw_gs]                          ; draw the state
 007  29001                           RETURNI ENABLE                             ; return with enable
 008                                  ;;============================================================================
 008                                  ;; Subroutine: hw_init
 008                                  ;; This puts the hardware into a known, initial state.  This includes a wait
 008                                  ;; to make sure the line drawing harware is idle (a wait loop which is also
 008                                  ;; called from other routines, as a subroutine).
 008                                  ;;============================================================================
 008                         hw_init: 
 008  01F00                           LOAD sF[scratch], 00[zero]                 ; going to use lot of zero
 009  2DF08                           OUTPUT sF[scratch], 08[leds_lo]            ; turn off lo leds
 00A  2DF09                           OUTPUT sF[scratch], 09[leds_hi]            ; turn off hi leds
 00B  2DF0A                           OUTPUT sF[scratch], 0A[qssd_lo]            ; zeroize qssd lo
 00C  2DF0B                           OUTPUT sF[scratch], 0B[qssd_hi]            ; zeroize qssd hi
 00D  2DF0C                           OUTPUT sF[scratch], 0C[qssd_dp]            ; turn off qssd dots
 00E  01F03                           LOAD sF[scratch], 03[mode_exp]             ; load desired mode
 00F  2DF06                           OUTPUT sF[scratch], 06[mode]               ; program the framebuffer
 010  01F0F                           LOAD sF[scratch], 0F[beam_hi]              ; load desired beam
 011  2DF05                           OUTPUT sF[scratch], 05[beam]               ; program the framebuffer
 012                    hw_init_wait: 
 012  09F04                           INPUT sF[scratch], 04[busy]                ; get framebuffer busy
 013  1DF01                           COMPARE sF[scratch], 01[busy_go]           ; check framebuffer busy
 014  32012                           JUMP Z, 012[hw_init_wait]                  ; back to wait if busy
 015  25000                           RETURN                                     ; return
 016                                  ;;============================================================================
 016                                  ;; Subroutine: gs_init
 016                                  ;; This puts the game into a known, initial state.  I've assigned all of the
 016                                  ;; game state to a known value -- although some of these assignments do not
 016                                  ;; really matter based on design of the game state machine.
 016                                  ;;============================================================================
 016                         gs_init: 
 016  01000                           LOAD s0[gs_major], 00[gs_major_attrone]    ; start in attract mdoe
 017  01100                           LOAD s1[gs_minor], 00[gs_minor_begins]     ; start with counter zero
 018  01200                           LOAD s2[gs_tbulletx], 00[zero]             ; doesn't really matter
 019  01300                           LOAD s3[gs_tbullety], 00[zero]             ; doesn't really matter
 01A  01500                           LOAD s5[gs_tankx], 00[zero]                ; doesn't really matter
 01B  01400                           LOAD s4[gs_tbulletdy], 00[zero]            ; doesn't really matter
 01C  01B00                           LOAD sB[tbullet_en], 00[zero]              ; start with top button not pressed
 01D  01F00                           LOAD sF[scratch], 00[zero]                 ; loads zero to scratch
 01E  2FF00                           STORE sF[scratch], 00[alien_x]             ; aliens start at 0,0
 01F  2FF01                           STORE sF[scratch], 01[alien_y]             ; aliens start at 0,0
 020  01FFF                           LOAD sF[scratch], FF                       ; loads ff to scratch
 021  2FF02                           STORE sF[scratch], 02[alien_1_hp]          ; sets full health to aliens
 022  2FF03                           STORE sF[scratch], 03[alien_2_hp]          ; sets full health to aliens
 023  2FF04                           STORE sF[scratch], 04[alien_3_hp]          ; sets full health to aliens
 024  2FF05                           STORE sF[scratch], 05[alien_4_hp]          ; sets full health to aliens
 025  2FF06                           STORE sF[scratch], 06[alien_5_hp]          ; sets full health to aliens
 026  25000                           RETURN                                     ; return
 027                                  ;;============================================================================
 027                                  ;; Subroutine: user_input
 027                                  ;; This samples the user inputs required for this game (which happens to be
 027                                  ;; only the buttons, but this could is extended to the switches as well).
 027                                  ;; This subroutine calls an example of how to use the RAM scratchpad, by
 027                                  ;; implementing access of a 256x8 array using switches, button, and qssd.
 027                                  ;; The call to the ram_example routine (and ram_example routine itself)
 027                                  ;; can be entirely removed as it is not needed in this game.
 027                                  ;;============================================================================
 027                      user_input: 
 027  09D0F                           INPUT sD[btnsamp], 0F[buttons]             ; sample button hardware
 028  25000                           RETURN                                     ; return
 029                                  ;;============================================================================
 029                                  ;; Subroutine: calc_next_gs
 029                                  ;; This logic calculates the next state of the game, given the sampled user
 029                                  ;; inputs and the current state of the game.
 029                                  ;;============================================================================
 029                    calc_next_gs: 
 029  1D000                           COMPARE s0[gs_major], 00[gs_major_attrone] ; are we in attrone?
 02A  32032                           JUMP Z, 032[calc_attrone]                  ; do ns calc for attrone
 02B  1D001                           COMPARE s0[gs_major], 01[gs_major_attrtwo] ; are we in attrtwo?
 02C  32038                           JUMP Z, 038[calc_attrtwo]                  ; do ns calc for attrtwo
 02D  1D002                           COMPARE s0[gs_major], 02[gs_major_playing] ; are we in playing?
 02E  3204C                           JUMP Z, 04C[calc_playing]                  ; do ns calc for playing
 02F  1D003                           COMPARE s0[gs_major], 03[gs_major_gameend] ; are we in gameend?
 030  320C9                           JUMP Z, 0C9[calc_gameend]                  ; do ns calc for gameend
 031  25000                           RETURN 
 032                    calc_attrone: 
 032  0DD10                           TEST sD[btnsamp], 10[buttons_ct]           ; starts game if center button is pressed
 033  3603E                           JUMP NZ, 03E[initial_positions]            ; othersize, swap between bong and ec
 034  1D178                           COMPARE s1[gs_minor], 78[gs_minor_twosec]  ; attrone is bong, attrtwo is ec
 035  320D0                           JUMP Z, 0D0[goto_attrtwo]
 036  11101                           ADD s1[gs_minor], 01[one]
 037  25000                           RETURN 
 038                    calc_attrtwo: 
 038  0DD10                           TEST sD[btnsamp], 10[buttons_ct]
 039  3603E                           JUMP NZ, 03E[initial_positions]
 03A  1D13C                           COMPARE s1[gs_minor], 3C[gs_minor_onesec]
 03B  320CD                           JUMP Z, 0CD[goto_attrone]
 03C  11101                           ADD s1[gs_minor], 01[one]
 03D  25000                           RETURN 
 03E               initial_positions: 
 03E  01510                           LOAD s5[gs_tankx], 10[gs_tank_xdim]        ; start tank at the bottom horizontal center of screen
 03F  1450A                           SRX s5[gs_tankx]
 040  075FF                           XOR s5[gs_tankx], FF[minusone]
 041  11501                           ADD s5[gs_tankx], 01[one]
 042  11580                           ADD s5[gs_tankx], 80[minusmax]
 043  00F50                           LOAD sF[scratch], s5[gs_tankx]             ; start bullet at the upper center of the tank
 044  11F08                           ADD sF[scratch], 08
 045  002F0                           LOAD s2[gs_tbulletx], sF[scratch]
 046  01FF4                           LOAD sF[scratch], F4[gs_tanky]
 047  19F03                           SUB sF[scratch], 03
 048  003F0                           LOAD s3[gs_tbullety], sF[scratch]
 049  01002                           LOAD s0[gs_major], 02[gs_major_playing]
 04A  01100                           LOAD s1[gs_minor], 00[gs_minor_begins]
 04B  25000                           RETURN 
 04C                    calc_playing: 
 04C  2006C                           CALL 06C[upd_tank]                         ; go to update tank position
 04D  0DD08                           TEST sD[btnsamp], 08[buttons_up]           ; check if the top button was pushed
 04E  34086                           CALL NZ, 086[load_tbullet_en]              ; if it was, enable bullet enable
 04F  1DB00                           COMPARE sB[tbullet_en], 00[zero]           ; check if bullet enable is enabled
 050  34088                           CALL NZ, 088[upd_tbullet]                  ; if it is, update shot bullet position
 051  20053                           CALL 053[upd_aliens]
 052  25000                           RETURN 
 053                      upd_aliens: 
 053  0BF00                           FETCH sF[scratch], 00[alien_x]             ; store alien x position to scratch
 054  1DF87                           COMPARE sF[scratch], 87                    ; compare and check if at end
 055  30068                           CALL Z, 068[upd_aliens_y]                  ; if at end add one to y position
 056  1DF00                           COMPARE sF[scratch], 00
 057  30068                           CALL Z, 068[upd_aliens_y]                  ; if at end add one to y position
 058  0BF01                           FETCH sF[scratch], 01[alien_y]
 059  0DF01                           TEST sF[scratch], 01
 05A  3C064                           CALL NC, 064[upd_aliens_x_left]
 05B  38060                           CALL C, 060[upd_aliens_x_right]
 05C  0BF01                           FETCH sF[scratch], 01[alien_y]
 05D  1DFBE                           COMPARE sF[scratch], BE
 05E  300D3                           CALL Z, 0D3[goto_gameend]                  ; end the game if aliens reach end
 05F  25000                           RETURN 
 060              upd_aliens_x_right: 
 060  0BF00                           FETCH sF[scratch], 00[alien_x]             ; store alien x position to scratch
 061  11F01                           ADD sF[scratch], 01[one]                   ; adds one to scratch
 062  2FF00                           STORE sF[scratch], 00[alien_x]             ; store scratch back into alien x position
 063  25000                           RETURN 
 064               upd_aliens_x_left: 
 064  0BF00                           FETCH sF[scratch], 00[alien_x]             ; store alien x position to scratch
 065  19F01                           SUB sF[scratch], 01[one]                   ; sub one to scratch
 066  2FF00                           STORE sF[scratch], 00[alien_x]             ; store scratch back into alien x position
 067  25000                           RETURN 
 068                    upd_aliens_y: 
 068  0BF01                           FETCH sF[scratch], 01[alien_y]             ; store alien y position to scratch
 069  11F05                           ADD sF[scratch], 05                        ; adds one to scratch
 06A  2FF01                           STORE sF[scratch], 01[alien_y]             ; store scratch back into alien y position
 06B  25000                           RETURN 
 06C                        upd_tank: 
 06C  01F00                           LOAD sF[scratch], 00[zero]                 ; update tank position
 06D  0DD02                           TEST sD[btnsamp], 02[buttons_lf]
 06E  1BF00                           SUBCY sF[scratch], 00[zero]
 06F  0DD01                           TEST sD[btnsamp], 01[buttons_rt]
 070  13F00                           ADDCY sF[scratch], 00[zero]
 071  1DFFF                           COMPARE sF[scratch], FF[minusone]
 072  3007B                           CALL Z, 07B[upd_tank_lt]
 073  1DF01                           COMPARE sF[scratch], 01[one]
 074  3007F                           CALL Z, 07F[upd_tank_rt]
 075  1DB00                           COMPARE sB[tbullet_en], 00[zero]           ; if bullet enable is 0, update unshot bullet x position
 076  35000                           RETURN NZ                                  ; if bullet enable is 1, do not update bullet x position
 077  00F50                           LOAD sF[scratch], s5[gs_tankx]             ; update unshot bullet x position
 078  11F08                           ADD sF[scratch], 08
 079  002F0                           LOAD s2[gs_tbulletx], sF[scratch]
 07A  25000                           RETURN 
 07B                     upd_tank_lt: 
 07B  19502                           SUB s5[gs_tankx], 02[gs_tank_speed]
 07C  3D000                           RETURN NC
 07D  01500                           LOAD s5[gs_tankx], 00[zero]
 07E  25000                           RETURN 
 07F                     upd_tank_rt: 
 07F  11502                           ADD s5[gs_tankx], 02[gs_tank_speed]
 080  00F50                           LOAD sF[scratch], s5[gs_tankx]
 081  11F10                           ADD sF[scratch], 10[gs_tank_xdim]
 082  3D000                           RETURN NC
 083  015FF                           LOAD s5[gs_tankx], FF[minusone]
 084  19510                           SUB s5[gs_tankx], 10[gs_tank_xdim]
 085  25000                           RETURN 
 086                 load_tbullet_en: 
 086  01B01                           LOAD sB[tbullet_en], 01[one]               ; enable bullet enable
 087  25000                           RETURN 
 088                     upd_tbullet: 
 088  01E08                           LOAD sE[loopvar], 08[gs_tbullet_speed]     ; loop for bullety moving up
 089                upd_tbullet_loop: 
 089  19E01                           SUB sE[loopvar], 01[one]
 08A  39000                           RETURN C                                   ; needed for some reason I do not know... yet
 08B  19301                           SUB s3[gs_tbullety], 01[one]
 08C  32090                           JUMP Z, 090[reset_tbullet]
 08D  1D3E0                           COMPARE s3[gs_tbullety], E0[shieldy]
 08E  32098                           JUMP Z, 098[check_shield]
 08F         restart_upd_bullet_loop: 
 08F  22089                           JUMP 089[upd_tbullet_loop]
 090                   reset_tbullet: ; reload bullet position when it hits something
 090  00F50                           LOAD sF[scratch], s5[gs_tankx]
 091  11F08                           ADD sF[scratch], 08
 092  002F0                           LOAD s2[gs_tbulletx], sF[scratch]
 093  01FF4                           LOAD sF[scratch], F4[gs_tanky]
 094  19F03                           SUB sF[scratch], 03
 095  003F0                           LOAD s3[gs_tbullety], sF[scratch]
 096  01B00                           LOAD sB[tbullet_en], 00[zero]
 097  25000                           RETURN 
 098                    check_shield: ; check which shield region the bullet is in
 098  01F10                           LOAD sF[scratch], 10[shield1x]
 099  11F18                           ADD sF[scratch], 18[shieldxdim]
 09A  1C2F0                           COMPARE s2[gs_tbulletx], sF[scratch]
 09B  3A0A9                           JUMP C, 0A9[check_shield1]
 09C  01F52                           LOAD sF[scratch], 52[shield2x]
 09D  11F18                           ADD sF[scratch], 18[shieldxdim]
 09E  1C2F0                           COMPARE s2[gs_tbulletx], sF[scratch]
 09F  3A0B1                           JUMP C, 0B1[check_shield2]
 0A0  01F95                           LOAD sF[scratch], 95[shield3x]
 0A1  11F18                           ADD sF[scratch], 18[shieldxdim]
 0A2  1C2F0                           COMPARE s2[gs_tbulletx], sF[scratch]
 0A3  3A0B9                           JUMP C, 0B9[check_shield3]
 0A4  01FD7                           LOAD sF[scratch], D7[shield4x]
 0A5  11F18                           ADD sF[scratch], 18[shieldxdim]
 0A6  1C2F0                           COMPARE s2[gs_tbulletx], sF[scratch]
 0A7  3A0C1                           JUMP C, 0C1[check_shield4]
 0A8  2208F                           JUMP 08F[restart_upd_bullet_loop]
 0A9                   check_shield1: ; check if the bullet hit shield 1
 0A9  01F10                           LOAD sF[scratch], 10[shield1x]
 0AA  1CF20                           COMPARE sF[scratch], s2[gs_tbulletx]
 0AB  3E08F                           JUMP NC, 08F[restart_upd_bullet_loop]
 0AC  01F10                           LOAD sF[scratch], 10[shield1x]
 0AD  11F18                           ADD sF[scratch], 18[shieldxdim]
 0AE  1CF20                           COMPARE sF[scratch], s2[gs_tbulletx]
 0AF  3E090                           JUMP NC, 090[reset_tbullet]
 0B0  25000                           RETURN 
 0B1                   check_shield2: ; check if the bullet hit shield 2
 0B1  01F52                           LOAD sF[scratch], 52[shield2x]
 0B2  1CF20                           COMPARE sF[scratch], s2[gs_tbulletx]
 0B3  3E08F                           JUMP NC, 08F[restart_upd_bullet_loop]
 0B4  01F52                           LOAD sF[scratch], 52[shield2x]
 0B5  11F18                           ADD sF[scratch], 18[shieldxdim]
 0B6  1CF20                           COMPARE sF[scratch], s2[gs_tbulletx]
 0B7  3E090                           JUMP NC, 090[reset_tbullet]
 0B8  25000                           RETURN 
 0B9                   check_shield3: ; check if the bullet hit shield 3
 0B9  01F95                           LOAD sF[scratch], 95[shield3x]
 0BA  1CF20                           COMPARE sF[scratch], s2[gs_tbulletx]
 0BB  3E08F                           JUMP NC, 08F[restart_upd_bullet_loop]
 0BC  01F95                           LOAD sF[scratch], 95[shield3x]
 0BD  11F18                           ADD sF[scratch], 18[shieldxdim]
 0BE  1CF20                           COMPARE sF[scratch], s2[gs_tbulletx]
 0BF  3E090                           JUMP NC, 090[reset_tbullet]
 0C0  25000                           RETURN 
 0C1                   check_shield4: ; check if the bullet hit shield 4
 0C1  01FD7                           LOAD sF[scratch], D7[shield4x]
 0C2  1CF20                           COMPARE sF[scratch], s2[gs_tbulletx]
 0C3  3E08F                           JUMP NC, 08F[restart_upd_bullet_loop]
 0C4  01FD7                           LOAD sF[scratch], D7[shield4x]
 0C5  11F18                           ADD sF[scratch], 18[shieldxdim]
 0C6  1CF20                           COMPARE sF[scratch], s2[gs_tbulletx]
 0C7  3E090                           JUMP NC, 090[reset_tbullet]
 0C8  25000                           RETURN 
 0C9                    calc_gameend: 
 0C9  1D13C                           COMPARE s1[gs_minor], 3C[gs_minor_onesec]
 0CA  320CD                           JUMP Z, 0CD[goto_attrone]
 0CB  11101                           ADD s1[gs_minor], 01[one]
 0CC  25000                           RETURN 
 0CD                    goto_attrone: 
 0CD  01000                           LOAD s0[gs_major], 00[gs_major_attrone]
 0CE  01100                           LOAD s1[gs_minor], 00[gs_minor_begins]
 0CF  25000                           RETURN 
 0D0                    goto_attrtwo: 
 0D0  01001                           LOAD s0[gs_major], 01[gs_major_attrtwo]
 0D1  01100                           LOAD s1[gs_minor], 00[gs_minor_begins]
 0D2  25000                           RETURN 
 0D3                    goto_gameend: 
 0D3  01003                           LOAD s0[gs_major], 03[gs_major_gameend]
 0D4  01100                           LOAD s1[gs_minor], 00[gs_minor_begins]
 0D5  25000                           RETURN 
 0D6                                  ;;============================================================================
 0D6                                  ;; Subroutine: draw_gs
 0D6                                  ;; This uses the current game state as input, and draws it on the display.
 0D6                                  ;; This subroutine calls an example of how to output debug or diagnostic info
 0D6                                  ;; using the leds.  The call to the draw_gs_debug routine (and draw_gs_debug
 0D6                                  ;; routine itself) can be entirely remove as it is required to play the game.
 0D6                                  ;;============================================================================
 0D6                         draw_gs: 
 0D6  200E0                           CALL 0E0[draw_gs_debug]                    ; for debug info display
 0D7  1D000                           COMPARE s0[gs_major], 00[gs_major_attrone] ; are we in attrone?
 0D8  320E3                           JUMP Z, 0E3[draw_attrone]                  ; do drawing for attrone
 0D9  1D001                           COMPARE s0[gs_major], 01[gs_major_attrtwo] ; are we in attrtwo?
 0DA  32120                           JUMP Z, 120[draw_attrtwo]                  ; do drawing for attrtwo
 0DB  1D002                           COMPARE s0[gs_major], 02[gs_major_playing] ; are we in playing?
 0DC  3213C                           JUMP Z, 13C[draw_playing]                  ; do drawing for playing
 0DD  1D003                           COMPARE s0[gs_major], 03[gs_major_gameend] ; are we in gameend?
 0DE  323C7                           JUMP Z, 3C7[draw_gameend]                  ; do drawing for gameend
 0DF  25000                           RETURN                                     ; return
 0E0                   draw_gs_debug: 
 0E0  2D009                           OUTPUT s0[gs_major], 09[leds_hi]           ; debug display on leds
 0E1  2D108                           OUTPUT s1[gs_minor], 08[leds_lo]           ; debug display on leds
 0E2  25000                           RETURN                                     ; return
 0E3                    draw_attrone: 
 0E3  01928                           LOAD s9[xpos], 28                          ; draw letter b
 0E4  01A50                           LOAD sA[ypos], 50
 0E5  20401                           CALL 401[moveto]
 0E6  01928                           LOAD s9[xpos], 28
 0E7  01A90                           LOAD sA[ypos], 90
 0E8  20404                           CALL 404[drawto]
 0E9  01948                           LOAD s9[xpos], 48
 0EA  01A90                           LOAD sA[ypos], 90
 0EB  20404                           CALL 404[drawto]
 0EC  01948                           LOAD s9[xpos], 48
 0ED  01A70                           LOAD sA[ypos], 70
 0EE  20404                           CALL 404[drawto]
 0EF  01928                           LOAD s9[xpos], 28
 0F0  01A70                           LOAD sA[ypos], 70
 0F1  20404                           CALL 404[drawto]
 0F2  01958                           LOAD s9[xpos], 58                          ; draw letter o
 0F3  01A70                           LOAD sA[ypos], 70
 0F4  20401                           CALL 401[moveto]
 0F5  01958                           LOAD s9[xpos], 58
 0F6  01A90                           LOAD sA[ypos], 90
 0F7  20404                           CALL 404[drawto]
 0F8  01978                           LOAD s9[xpos], 78
 0F9  01A90                           LOAD sA[ypos], 90
 0FA  20404                           CALL 404[drawto]
 0FB  01978                           LOAD s9[xpos], 78
 0FC  01A70                           LOAD sA[ypos], 70
 0FD  20404                           CALL 404[drawto]
 0FE  01958                           LOAD s9[xpos], 58
 0FF  01A70                           LOAD sA[ypos], 70
 100  20404                           CALL 404[drawto]
 101  01988                           LOAD s9[xpos], 88                          ; draw letter n
 102  01A90                           LOAD sA[ypos], 90
 103  20401                           CALL 401[moveto]
 104  01988                           LOAD s9[xpos], 88
 105  01A70                           LOAD sA[ypos], 70
 106  20404                           CALL 404[drawto]
 107  019A8                           LOAD s9[xpos], A8
 108  01A70                           LOAD sA[ypos], 70
 109  20404                           CALL 404[drawto]
 10A  019A8                           LOAD s9[xpos], A8
 10B  01A90                           LOAD sA[ypos], 90
 10C  20404                           CALL 404[drawto]
 10D  019B8                           LOAD s9[xpos], B8                          ; draw letter g
 10E  01AB0                           LOAD sA[ypos], B0
 10F  20401                           CALL 401[moveto]
 110  019D8                           LOAD s9[xpos], D8
 111  01AB0                           LOAD sA[ypos], B0
 112  20404                           CALL 404[drawto]
 113  019D8                           LOAD s9[xpos], D8
 114  01A70                           LOAD sA[ypos], 70
 115  20404                           CALL 404[drawto]
 116  019B8                           LOAD s9[xpos], B8
 117  01A70                           LOAD sA[ypos], 70
 118  20404                           CALL 404[drawto]
 119  019B8                           LOAD s9[xpos], B8
 11A  01A90                           LOAD sA[ypos], 90
 11B  20404                           CALL 404[drawto]
 11C  019D8                           LOAD s9[xpos], D8
 11D  01A90                           LOAD sA[ypos], 90
 11E  20404                           CALL 404[drawto]
 11F  25000                           RETURN 
 120                    draw_attrtwo: 
 120  01978                           LOAD s9[xpos], 78                          ; draw letter e
 121  01A90                           LOAD sA[ypos], 90
 122  20401                           CALL 401[moveto]
 123  01958                           LOAD s9[xpos], 58
 124  01A90                           LOAD sA[ypos], 90
 125  20404                           CALL 404[drawto]
 126  01958                           LOAD s9[xpos], 58
 127  01A70                           LOAD sA[ypos], 70
 128  20404                           CALL 404[drawto]
 129  01978                           LOAD s9[xpos], 78
 12A  01A70                           LOAD sA[ypos], 70
 12B  20404                           CALL 404[drawto]
 12C  01958                           LOAD s9[xpos], 58
 12D  01A90                           LOAD sA[ypos], 90
 12E  20404                           CALL 404[drawto]
 12F  019A8                           LOAD s9[xpos], A8                          ; draw letter c
 130  01A70                           LOAD sA[ypos], 70
 131  20401                           CALL 401[moveto]
 132  01988                           LOAD s9[xpos], 88
 133  01A70                           LOAD sA[ypos], 70
 134  20404                           CALL 404[drawto]
 135  01988                           LOAD s9[xpos], 88
 136  01A90                           LOAD sA[ypos], 90
 137  20404                           CALL 404[drawto]
 138  019A8                           LOAD s9[xpos], A8
 139  01A90                           LOAD sA[ypos], 90
 13A  20404                           CALL 404[drawto]
 13B  25000                           RETURN 
 13C                    draw_playing: 
 13C  00920                           LOAD s9[xpos], s2[gs_tbulletx]             ; draw bullet
 13D  00A30                           LOAD sA[ypos], s3[gs_tbullety]
 13E  20401                           CALL 401[moveto]
 13F  00920                           LOAD s9[xpos], s2[gs_tbulletx]
 140  00A30                           LOAD sA[ypos], s3[gs_tbullety]
 141  11A05                           ADD sA[ypos], 05[gs_tbullet_ydim]
 142  20404                           CALL 404[drawto]
 143  00950                           LOAD s9[xpos], s5[gs_tankx]                ; draw tank
 144  01AF4                           LOAD sA[ypos], F4[gs_tanky]
 145  20401                           CALL 401[moveto]
 146  00950                           LOAD s9[xpos], s5[gs_tankx]
 147  01AF4                           LOAD sA[ypos], F4[gs_tanky]
 148  11A08                           ADD sA[ypos], 08[gs_tank_ydim]
 149  20404                           CALL 404[drawto]
 14A  00950                           LOAD s9[xpos], s5[gs_tankx]
 14B  01AF4                           LOAD sA[ypos], F4[gs_tanky]
 14C  11910                           ADD s9[xpos], 10[gs_tank_xdim]
 14D  11A08                           ADD sA[ypos], 08[gs_tank_ydim]
 14E  20404                           CALL 404[drawto]
 14F  00950                           LOAD s9[xpos], s5[gs_tankx]
 150  01AF4                           LOAD sA[ypos], F4[gs_tanky]
 151  11910                           ADD s9[xpos], 10[gs_tank_xdim]
 152  20404                           CALL 404[drawto]
 153  00950                           LOAD s9[xpos], s5[gs_tankx]
 154  01AF4                           LOAD sA[ypos], F4[gs_tanky]
 155  20404                           CALL 404[drawto]
 156  01910                           LOAD s9[xpos], 10[shield1x]                ; draw shield 1
 157  01AE0                           LOAD sA[ypos], E0[shieldy]
 158  20401                           CALL 401[moveto]
 159  01910                           LOAD s9[xpos], 10[shield1x]                ; draw shield 1 side 1
 15A  01AE0                           LOAD sA[ypos], E0[shieldy]
 15B  19A14                           SUB sA[ypos], 14[shieldydim]
 15C  20404                           CALL 404[drawto]
 15D  01910                           LOAD s9[xpos], 10[shield1x]                ; draw shield 1 side 2
 15E  01AE0                           LOAD sA[ypos], E0[shieldy]
 15F  19A14                           SUB sA[ypos], 14[shieldydim]
 160  11909                           ADD s9[xpos], 09
 161  20404                           CALL 404[drawto]
 162  01910                           LOAD s9[xpos], 10[shield1x]                ; draw shield 1 side 3
 163  01AE0                           LOAD sA[ypos], E0[shieldy]
 164  19A0E                           SUB sA[ypos], 0E
 165  11909                           ADD s9[xpos], 09
 166  20404                           CALL 404[drawto]
 167  01910                           LOAD s9[xpos], 10[shield1x]                ; draw shield 1 side 4
 168  01AE0                           LOAD sA[ypos], E0[shieldy]
 169  19A0E                           SUB sA[ypos], 0E
 16A  1190F                           ADD s9[xpos], 0F
 16B  20404                           CALL 404[drawto]
 16C  01910                           LOAD s9[xpos], 10[shield1x]                ; draw shield 1 side 5
 16D  01AE0                           LOAD sA[ypos], E0[shieldy]
 16E  19A14                           SUB sA[ypos], 14[shieldydim]
 16F  1190F                           ADD s9[xpos], 0F
 170  20404                           CALL 404[drawto]
 171  01910                           LOAD s9[xpos], 10[shield1x]                ; draw shield 1 side 6
 172  01AE0                           LOAD sA[ypos], E0[shieldy]
 173  11918                           ADD s9[xpos], 18[shieldxdim]
 174  19A14                           SUB sA[ypos], 14[shieldydim]
 175  20404                           CALL 404[drawto]
 176  01910                           LOAD s9[xpos], 10[shield1x]                ; draw shield 1 side 7
 177  01AE0                           LOAD sA[ypos], E0[shieldy]
 178  11918                           ADD s9[xpos], 18[shieldxdim]
 179  20404                           CALL 404[drawto]
 17A  01910                           LOAD s9[xpos], 10[shield1x]                ; draw shield 1 side 8
 17B  01AE0                           LOAD sA[ypos], E0[shieldy]
 17C  20404                           CALL 404[drawto]
 17D  01952                           LOAD s9[xpos], 52[shield2x]                ; draw shield 2
 17E  01AE0                           LOAD sA[ypos], E0[shieldy]
 17F  20401                           CALL 401[moveto]
 180  01952                           LOAD s9[xpos], 52[shield2x]                ; draw shield 2 side 1
 181  01AE0                           LOAD sA[ypos], E0[shieldy]
 182  19A14                           SUB sA[ypos], 14[shieldydim]
 183  20404                           CALL 404[drawto]
 184  01952                           LOAD s9[xpos], 52[shield2x]                ; draw shield 2 side 2
 185  01AE0                           LOAD sA[ypos], E0[shieldy]
 186  19A14                           SUB sA[ypos], 14[shieldydim]
 187  11909                           ADD s9[xpos], 09
 188  20404                           CALL 404[drawto]
 189  01952                           LOAD s9[xpos], 52[shield2x]                ; draw shield 2 side 3
 18A  01AE0                           LOAD sA[ypos], E0[shieldy]
 18B  19A0E                           SUB sA[ypos], 0E
 18C  11909                           ADD s9[xpos], 09
 18D  20404                           CALL 404[drawto]
 18E  01952                           LOAD s9[xpos], 52[shield2x]                ; draw shield 2 side 4
 18F  01AE0                           LOAD sA[ypos], E0[shieldy]
 190  19A0E                           SUB sA[ypos], 0E
 191  1190F                           ADD s9[xpos], 0F
 192  20404                           CALL 404[drawto]
 193  01952                           LOAD s9[xpos], 52[shield2x]                ; draw shield 2 side 5
 194  01AE0                           LOAD sA[ypos], E0[shieldy]
 195  19A14                           SUB sA[ypos], 14[shieldydim]
 196  1190F                           ADD s9[xpos], 0F
 197  20404                           CALL 404[drawto]
 198  01952                           LOAD s9[xpos], 52[shield2x]                ; draw shield 2 side 6
 199  01AE0                           LOAD sA[ypos], E0[shieldy]
 19A  11918                           ADD s9[xpos], 18[shieldxdim]
 19B  19A14                           SUB sA[ypos], 14[shieldydim]
 19C  20404                           CALL 404[drawto]
 19D  01952                           LOAD s9[xpos], 52[shield2x]                ; draw shield 2 side 7
 19E  01AE0                           LOAD sA[ypos], E0[shieldy]
 19F  11918                           ADD s9[xpos], 18[shieldxdim]
 1A0  20404                           CALL 404[drawto]
 1A1  01952                           LOAD s9[xpos], 52[shield2x]                ; draw shield 2 side 8
 1A2  01AE0                           LOAD sA[ypos], E0[shieldy]
 1A3  20404                           CALL 404[drawto]
 1A4  01995                           LOAD s9[xpos], 95[shield3x]                ; draw shield 3
 1A5  01AE0                           LOAD sA[ypos], E0[shieldy]
 1A6  20401                           CALL 401[moveto]
 1A7  01995                           LOAD s9[xpos], 95[shield3x]                ; draw shield 3 side 1
 1A8  01AE0                           LOAD sA[ypos], E0[shieldy]
 1A9  19A14                           SUB sA[ypos], 14[shieldydim]
 1AA  20404                           CALL 404[drawto]
 1AB  01995                           LOAD s9[xpos], 95[shield3x]                ; draw shield 3 side 2
 1AC  01AE0                           LOAD sA[ypos], E0[shieldy]
 1AD  19A14                           SUB sA[ypos], 14[shieldydim]
 1AE  11909                           ADD s9[xpos], 09
 1AF  20404                           CALL 404[drawto]
 1B0  01995                           LOAD s9[xpos], 95[shield3x]                ; draw shield 3 side 3
 1B1  01AE0                           LOAD sA[ypos], E0[shieldy]
 1B2  19A0E                           SUB sA[ypos], 0E
 1B3  11909                           ADD s9[xpos], 09
 1B4  20404                           CALL 404[drawto]
 1B5  01995                           LOAD s9[xpos], 95[shield3x]                ; draw shield 3 side 4
 1B6  01AE0                           LOAD sA[ypos], E0[shieldy]
 1B7  19A0E                           SUB sA[ypos], 0E
 1B8  1190F                           ADD s9[xpos], 0F
 1B9  20404                           CALL 404[drawto]
 1BA  01995                           LOAD s9[xpos], 95[shield3x]                ; draw shield 3 side 5
 1BB  01AE0                           LOAD sA[ypos], E0[shieldy]
 1BC  19A14                           SUB sA[ypos], 14[shieldydim]
 1BD  1190F                           ADD s9[xpos], 0F
 1BE  20404                           CALL 404[drawto]
 1BF  01995                           LOAD s9[xpos], 95[shield3x]                ; draw shield 3 side 6
 1C0  01AE0                           LOAD sA[ypos], E0[shieldy]
 1C1  11918                           ADD s9[xpos], 18[shieldxdim]
 1C2  19A14                           SUB sA[ypos], 14[shieldydim]
 1C3  20404                           CALL 404[drawto]
 1C4  01995                           LOAD s9[xpos], 95[shield3x]                ; draw shield 3 side 7
 1C5  01AE0                           LOAD sA[ypos], E0[shieldy]
 1C6  11918                           ADD s9[xpos], 18[shieldxdim]
 1C7  20404                           CALL 404[drawto]
 1C8  01995                           LOAD s9[xpos], 95[shield3x]                ; draw shield 3 side 8
 1C9  01AE0                           LOAD sA[ypos], E0[shieldy]
 1CA  20404                           CALL 404[drawto]
 1CB  019D7                           LOAD s9[xpos], D7[shield4x]                ; draw shield 4
 1CC  01AE0                           LOAD sA[ypos], E0[shieldy]
 1CD  20401                           CALL 401[moveto]
 1CE  019D7                           LOAD s9[xpos], D7[shield4x]                ; draw shield 4 side 1
 1CF  01AE0                           LOAD sA[ypos], E0[shieldy]
 1D0  19A14                           SUB sA[ypos], 14[shieldydim]
 1D1  20404                           CALL 404[drawto]
 1D2  019D7                           LOAD s9[xpos], D7[shield4x]                ; draw shield 4 side 2
 1D3  01AE0                           LOAD sA[ypos], E0[shieldy]
 1D4  19A14                           SUB sA[ypos], 14[shieldydim]
 1D5  11909                           ADD s9[xpos], 09
 1D6  20404                           CALL 404[drawto]
 1D7  019D7                           LOAD s9[xpos], D7[shield4x]                ; draw shield 4 side 3
 1D8  01AE0                           LOAD sA[ypos], E0[shieldy]
 1D9  19A0E                           SUB sA[ypos], 0E
 1DA  11909                           ADD s9[xpos], 09
 1DB  20404                           CALL 404[drawto]
 1DC  019D7                           LOAD s9[xpos], D7[shield4x]                ; draw shield 4 side 4
 1DD  01AE0                           LOAD sA[ypos], E0[shieldy]
 1DE  19A0E                           SUB sA[ypos], 0E
 1DF  1190F                           ADD s9[xpos], 0F
 1E0  20404                           CALL 404[drawto]
 1E1  019D7                           LOAD s9[xpos], D7[shield4x]                ; draw shield 4 side 5
 1E2  01AE0                           LOAD sA[ypos], E0[shieldy]
 1E3  19A14                           SUB sA[ypos], 14[shieldydim]
 1E4  1190F                           ADD s9[xpos], 0F
 1E5  20404                           CALL 404[drawto]
 1E6  019D7                           LOAD s9[xpos], D7[shield4x]                ; draw shield 4 side 6
 1E7  01AE0                           LOAD sA[ypos], E0[shieldy]
 1E8  11918                           ADD s9[xpos], 18[shieldxdim]
 1E9  19A14                           SUB sA[ypos], 14[shieldydim]
 1EA  20404                           CALL 404[drawto]
 1EB  019D7                           LOAD s9[xpos], D7[shield4x]                ; draw shield 4 side 7
 1EC  01AE0                           LOAD sA[ypos], E0[shieldy]
 1ED  11918                           ADD s9[xpos], 18[shieldxdim]
 1EE  20404                           CALL 404[drawto]
 1EF  019D7                           LOAD s9[xpos], D7[shield4x]                ; draw shield 4 side 8
 1F0  01AE0                           LOAD sA[ypos], E0[shieldy]
 1F1  20404                           CALL 404[drawto]
 1F2  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 1st alien
 1F3  009F0                           LOAD s9[xpos], sF[scratch]
 1F4  0BF01                           FETCH sF[scratch], 01[alien_y]
 1F5  00AF0                           LOAD sA[ypos], sF[scratch]
 1F6  20401                           CALL 401[moveto]
 1F7  11908                           ADD s9[xpos], 08[alien_x_dim]
 1F8  20404                           CALL 404[drawto]
 1F9  11A02                           ADD sA[ypos], 02[alien_y_dim]
 1FA  20404                           CALL 404[drawto]
 1FB  19908                           SUB s9[xpos], 08[alien_x_dim]
 1FC  20404                           CALL 404[drawto]
 1FD  19A02                           SUB sA[ypos], 02[alien_y_dim]
 1FE  20404                           CALL 404[drawto]
 1FF  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 2st alien
 200  11F10                           ADD sF[scratch], 10
 201  009F0                           LOAD s9[xpos], sF[scratch]
 202  0BF01                           FETCH sF[scratch], 01[alien_y]
 203  00AF0                           LOAD sA[ypos], sF[scratch]
 204  20401                           CALL 401[moveto]
 205  11908                           ADD s9[xpos], 08[alien_x_dim]
 206  20404                           CALL 404[drawto]
 207  11A02                           ADD sA[ypos], 02[alien_y_dim]
 208  20404                           CALL 404[drawto]
 209  19908                           SUB s9[xpos], 08[alien_x_dim]
 20A  20404                           CALL 404[drawto]
 20B  19A02                           SUB sA[ypos], 02[alien_y_dim]
 20C  20404                           CALL 404[drawto]
 20D  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 3st alien
 20E  11F20                           ADD sF[scratch], 20
 20F  009F0                           LOAD s9[xpos], sF[scratch]
 210  0BF01                           FETCH sF[scratch], 01[alien_y]
 211  00AF0                           LOAD sA[ypos], sF[scratch]
 212  20401                           CALL 401[moveto]
 213  11908                           ADD s9[xpos], 08[alien_x_dim]
 214  20404                           CALL 404[drawto]
 215  11A02                           ADD sA[ypos], 02[alien_y_dim]
 216  20404                           CALL 404[drawto]
 217  19908                           SUB s9[xpos], 08[alien_x_dim]
 218  20404                           CALL 404[drawto]
 219  19A02                           SUB sA[ypos], 02[alien_y_dim]
 21A  20404                           CALL 404[drawto]
 21B  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 4st alien
 21C  11F30                           ADD sF[scratch], 30
 21D  009F0                           LOAD s9[xpos], sF[scratch]
 21E  0BF01                           FETCH sF[scratch], 01[alien_y]
 21F  00AF0                           LOAD sA[ypos], sF[scratch]
 220  20401                           CALL 401[moveto]
 221  11908                           ADD s9[xpos], 08[alien_x_dim]
 222  20404                           CALL 404[drawto]
 223  11A02                           ADD sA[ypos], 02[alien_y_dim]
 224  20404                           CALL 404[drawto]
 225  19908                           SUB s9[xpos], 08[alien_x_dim]
 226  20404                           CALL 404[drawto]
 227  19A02                           SUB sA[ypos], 02[alien_y_dim]
 228  20404                           CALL 404[drawto]
 229  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 5st alien
 22A  11F40                           ADD sF[scratch], 40
 22B  009F0                           LOAD s9[xpos], sF[scratch]
 22C  0BF01                           FETCH sF[scratch], 01[alien_y]
 22D  00AF0                           LOAD sA[ypos], sF[scratch]
 22E  20401                           CALL 401[moveto]
 22F  11908                           ADD s9[xpos], 08[alien_x_dim]
 230  20404                           CALL 404[drawto]
 231  11A02                           ADD sA[ypos], 02[alien_y_dim]
 232  20404                           CALL 404[drawto]
 233  19908                           SUB s9[xpos], 08[alien_x_dim]
 234  20404                           CALL 404[drawto]
 235  19A02                           SUB sA[ypos], 02[alien_y_dim]
 236  20404                           CALL 404[drawto]
 237  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 6st alien
 238  11F50                           ADD sF[scratch], 50
 239  009F0                           LOAD s9[xpos], sF[scratch]
 23A  0BF01                           FETCH sF[scratch], 01[alien_y]
 23B  00AF0                           LOAD sA[ypos], sF[scratch]
 23C  20401                           CALL 401[moveto]
 23D  11908                           ADD s9[xpos], 08[alien_x_dim]
 23E  20404                           CALL 404[drawto]
 23F  11A02                           ADD sA[ypos], 02[alien_y_dim]
 240  20404                           CALL 404[drawto]
 241  19908                           SUB s9[xpos], 08[alien_x_dim]
 242  20404                           CALL 404[drawto]
 243  19A02                           SUB sA[ypos], 02[alien_y_dim]
 244  20404                           CALL 404[drawto]
 245  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 7st alien
 246  11F60                           ADD sF[scratch], 60
 247  009F0                           LOAD s9[xpos], sF[scratch]
 248  0BF01                           FETCH sF[scratch], 01[alien_y]
 249  00AF0                           LOAD sA[ypos], sF[scratch]
 24A  20401                           CALL 401[moveto]
 24B  11908                           ADD s9[xpos], 08[alien_x_dim]
 24C  20404                           CALL 404[drawto]
 24D  11A02                           ADD sA[ypos], 02[alien_y_dim]
 24E  20404                           CALL 404[drawto]
 24F  19908                           SUB s9[xpos], 08[alien_x_dim]
 250  20404                           CALL 404[drawto]
 251  19A02                           SUB sA[ypos], 02[alien_y_dim]
 252  20404                           CALL 404[drawto]
 253  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 8st alien
 254  11F70                           ADD sF[scratch], 70
 255  009F0                           LOAD s9[xpos], sF[scratch]
 256  0BF01                           FETCH sF[scratch], 01[alien_y]
 257  00AF0                           LOAD sA[ypos], sF[scratch]
 258  20401                           CALL 401[moveto]
 259  11908                           ADD s9[xpos], 08[alien_x_dim]
 25A  20404                           CALL 404[drawto]
 25B  11A02                           ADD sA[ypos], 02[alien_y_dim]
 25C  20404                           CALL 404[drawto]
 25D  19908                           SUB s9[xpos], 08[alien_x_dim]
 25E  20404                           CALL 404[drawto]
 25F  19A02                           SUB sA[ypos], 02[alien_y_dim]
 260  20404                           CALL 404[drawto]
 261  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 9st alien
 262  009F0                           LOAD s9[xpos], sF[scratch]
 263  0BF01                           FETCH sF[scratch], 01[alien_y]
 264  11F08                           ADD sF[scratch], 08
 265  00AF0                           LOAD sA[ypos], sF[scratch]
 266  20401                           CALL 401[moveto]
 267  11908                           ADD s9[xpos], 08[alien_x_dim]
 268  20404                           CALL 404[drawto]
 269  11A02                           ADD sA[ypos], 02[alien_y_dim]
 26A  20404                           CALL 404[drawto]
 26B  19908                           SUB s9[xpos], 08[alien_x_dim]
 26C  20404                           CALL 404[drawto]
 26D  19A02                           SUB sA[ypos], 02[alien_y_dim]
 26E  20404                           CALL 404[drawto]
 26F  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 10st alien
 270  11F10                           ADD sF[scratch], 10
 271  009F0                           LOAD s9[xpos], sF[scratch]
 272  0BF01                           FETCH sF[scratch], 01[alien_y]
 273  11F08                           ADD sF[scratch], 08
 274  00AF0                           LOAD sA[ypos], sF[scratch]
 275  20401                           CALL 401[moveto]
 276  11908                           ADD s9[xpos], 08[alien_x_dim]
 277  20404                           CALL 404[drawto]
 278  11A02                           ADD sA[ypos], 02[alien_y_dim]
 279  20404                           CALL 404[drawto]
 27A  19908                           SUB s9[xpos], 08[alien_x_dim]
 27B  20404                           CALL 404[drawto]
 27C  19A02                           SUB sA[ypos], 02[alien_y_dim]
 27D  20404                           CALL 404[drawto]
 27E  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 11st alien
 27F  11F20                           ADD sF[scratch], 20
 280  009F0                           LOAD s9[xpos], sF[scratch]
 281  0BF01                           FETCH sF[scratch], 01[alien_y]
 282  11F08                           ADD sF[scratch], 08
 283  00AF0                           LOAD sA[ypos], sF[scratch]
 284  20401                           CALL 401[moveto]
 285  11908                           ADD s9[xpos], 08[alien_x_dim]
 286  20404                           CALL 404[drawto]
 287  11A02                           ADD sA[ypos], 02[alien_y_dim]
 288  20404                           CALL 404[drawto]
 289  19908                           SUB s9[xpos], 08[alien_x_dim]
 28A  20404                           CALL 404[drawto]
 28B  19A02                           SUB sA[ypos], 02[alien_y_dim]
 28C  20404                           CALL 404[drawto]
 28D  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 12st alien
 28E  11F30                           ADD sF[scratch], 30
 28F  009F0                           LOAD s9[xpos], sF[scratch]
 290  0BF01                           FETCH sF[scratch], 01[alien_y]
 291  11F08                           ADD sF[scratch], 08
 292  00AF0                           LOAD sA[ypos], sF[scratch]
 293  20401                           CALL 401[moveto]
 294  11908                           ADD s9[xpos], 08[alien_x_dim]
 295  20404                           CALL 404[drawto]
 296  11A02                           ADD sA[ypos], 02[alien_y_dim]
 297  20404                           CALL 404[drawto]
 298  19908                           SUB s9[xpos], 08[alien_x_dim]
 299  20404                           CALL 404[drawto]
 29A  19A02                           SUB sA[ypos], 02[alien_y_dim]
 29B  20404                           CALL 404[drawto]
 29C  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 13st alien
 29D  11F40                           ADD sF[scratch], 40
 29E  009F0                           LOAD s9[xpos], sF[scratch]
 29F  0BF01                           FETCH sF[scratch], 01[alien_y]
 2A0  11F08                           ADD sF[scratch], 08
 2A1  00AF0                           LOAD sA[ypos], sF[scratch]
 2A2  20401                           CALL 401[moveto]
 2A3  11908                           ADD s9[xpos], 08[alien_x_dim]
 2A4  20404                           CALL 404[drawto]
 2A5  11A02                           ADD sA[ypos], 02[alien_y_dim]
 2A6  20404                           CALL 404[drawto]
 2A7  19908                           SUB s9[xpos], 08[alien_x_dim]
 2A8  20404                           CALL 404[drawto]
 2A9  19A02                           SUB sA[ypos], 02[alien_y_dim]
 2AA  20404                           CALL 404[drawto]
 2AB  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 14st alien
 2AC  11F50                           ADD sF[scratch], 50
 2AD  009F0                           LOAD s9[xpos], sF[scratch]
 2AE  0BF01                           FETCH sF[scratch], 01[alien_y]
 2AF  11F08                           ADD sF[scratch], 08
 2B0  00AF0                           LOAD sA[ypos], sF[scratch]
 2B1  20401                           CALL 401[moveto]
 2B2  11908                           ADD s9[xpos], 08[alien_x_dim]
 2B3  20404                           CALL 404[drawto]
 2B4  11A02                           ADD sA[ypos], 02[alien_y_dim]
 2B5  20404                           CALL 404[drawto]
 2B6  19908                           SUB s9[xpos], 08[alien_x_dim]
 2B7  20404                           CALL 404[drawto]
 2B8  19A02                           SUB sA[ypos], 02[alien_y_dim]
 2B9  20404                           CALL 404[drawto]
 2BA  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 15st alien
 2BB  11F60                           ADD sF[scratch], 60
 2BC  009F0                           LOAD s9[xpos], sF[scratch]
 2BD  0BF01                           FETCH sF[scratch], 01[alien_y]
 2BE  11F08                           ADD sF[scratch], 08
 2BF  00AF0                           LOAD sA[ypos], sF[scratch]
 2C0  20401                           CALL 401[moveto]
 2C1  11908                           ADD s9[xpos], 08[alien_x_dim]
 2C2  20404                           CALL 404[drawto]
 2C3  11A02                           ADD sA[ypos], 02[alien_y_dim]
 2C4  20404                           CALL 404[drawto]
 2C5  19908                           SUB s9[xpos], 08[alien_x_dim]
 2C6  20404                           CALL 404[drawto]
 2C7  19A02                           SUB sA[ypos], 02[alien_y_dim]
 2C8  20404                           CALL 404[drawto]
 2C9  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 16st alien
 2CA  11F70                           ADD sF[scratch], 70
 2CB  009F0                           LOAD s9[xpos], sF[scratch]
 2CC  0BF01                           FETCH sF[scratch], 01[alien_y]
 2CD  11F08                           ADD sF[scratch], 08
 2CE  00AF0                           LOAD sA[ypos], sF[scratch]
 2CF  20401                           CALL 401[moveto]
 2D0  11908                           ADD s9[xpos], 08[alien_x_dim]
 2D1  20404                           CALL 404[drawto]
 2D2  11A02                           ADD sA[ypos], 02[alien_y_dim]
 2D3  20404                           CALL 404[drawto]
 2D4  19908                           SUB s9[xpos], 08[alien_x_dim]
 2D5  20404                           CALL 404[drawto]
 2D6  19A02                           SUB sA[ypos], 02[alien_y_dim]
 2D7  20404                           CALL 404[drawto]
 2D8  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 17st alien
 2D9  009F0                           LOAD s9[xpos], sF[scratch]
 2DA  0BF01                           FETCH sF[scratch], 01[alien_y]
 2DB  11F10                           ADD sF[scratch], 10
 2DC  00AF0                           LOAD sA[ypos], sF[scratch]
 2DD  20401                           CALL 401[moveto]
 2DE  11908                           ADD s9[xpos], 08[alien_x_dim]
 2DF  20404                           CALL 404[drawto]
 2E0  11A02                           ADD sA[ypos], 02[alien_y_dim]
 2E1  20404                           CALL 404[drawto]
 2E2  19908                           SUB s9[xpos], 08[alien_x_dim]
 2E3  20404                           CALL 404[drawto]
 2E4  19A02                           SUB sA[ypos], 02[alien_y_dim]
 2E5  20404                           CALL 404[drawto]
 2E6  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 18st alien
 2E7  11F10                           ADD sF[scratch], 10
 2E8  009F0                           LOAD s9[xpos], sF[scratch]
 2E9  0BF01                           FETCH sF[scratch], 01[alien_y]
 2EA  11F10                           ADD sF[scratch], 10
 2EB  00AF0                           LOAD sA[ypos], sF[scratch]
 2EC  20401                           CALL 401[moveto]
 2ED  11908                           ADD s9[xpos], 08[alien_x_dim]
 2EE  20404                           CALL 404[drawto]
 2EF  11A02                           ADD sA[ypos], 02[alien_y_dim]
 2F0  20404                           CALL 404[drawto]
 2F1  19908                           SUB s9[xpos], 08[alien_x_dim]
 2F2  20404                           CALL 404[drawto]
 2F3  19A02                           SUB sA[ypos], 02[alien_y_dim]
 2F4  20404                           CALL 404[drawto]
 2F5  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 19st alien
 2F6  11F20                           ADD sF[scratch], 20
 2F7  009F0                           LOAD s9[xpos], sF[scratch]
 2F8  0BF01                           FETCH sF[scratch], 01[alien_y]
 2F9  11F10                           ADD sF[scratch], 10
 2FA  00AF0                           LOAD sA[ypos], sF[scratch]
 2FB  20401                           CALL 401[moveto]
 2FC  11908                           ADD s9[xpos], 08[alien_x_dim]
 2FD  20404                           CALL 404[drawto]
 2FE  11A02                           ADD sA[ypos], 02[alien_y_dim]
 2FF  20404                           CALL 404[drawto]
 300  19908                           SUB s9[xpos], 08[alien_x_dim]
 301  20404                           CALL 404[drawto]
 302  19A02                           SUB sA[ypos], 02[alien_y_dim]
 303  20404                           CALL 404[drawto]
 304  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 20st alien
 305  11F30                           ADD sF[scratch], 30
 306  009F0                           LOAD s9[xpos], sF[scratch]
 307  0BF01                           FETCH sF[scratch], 01[alien_y]
 308  11F10                           ADD sF[scratch], 10
 309  00AF0                           LOAD sA[ypos], sF[scratch]
 30A  20401                           CALL 401[moveto]
 30B  11908                           ADD s9[xpos], 08[alien_x_dim]
 30C  20404                           CALL 404[drawto]
 30D  11A02                           ADD sA[ypos], 02[alien_y_dim]
 30E  20404                           CALL 404[drawto]
 30F  19908                           SUB s9[xpos], 08[alien_x_dim]
 310  20404                           CALL 404[drawto]
 311  19A02                           SUB sA[ypos], 02[alien_y_dim]
 312  20404                           CALL 404[drawto]
 313  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 21st alien
 314  11F40                           ADD sF[scratch], 40
 315  009F0                           LOAD s9[xpos], sF[scratch]
 316  0BF01                           FETCH sF[scratch], 01[alien_y]
 317  11F10                           ADD sF[scratch], 10
 318  00AF0                           LOAD sA[ypos], sF[scratch]
 319  20401                           CALL 401[moveto]
 31A  11908                           ADD s9[xpos], 08[alien_x_dim]
 31B  20404                           CALL 404[drawto]
 31C  11A02                           ADD sA[ypos], 02[alien_y_dim]
 31D  20404                           CALL 404[drawto]
 31E  19908                           SUB s9[xpos], 08[alien_x_dim]
 31F  20404                           CALL 404[drawto]
 320  19A02                           SUB sA[ypos], 02[alien_y_dim]
 321  20404                           CALL 404[drawto]
 322  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 22st alien
 323  11F50                           ADD sF[scratch], 50
 324  009F0                           LOAD s9[xpos], sF[scratch]
 325  0BF01                           FETCH sF[scratch], 01[alien_y]
 326  11F10                           ADD sF[scratch], 10
 327  00AF0                           LOAD sA[ypos], sF[scratch]
 328  20401                           CALL 401[moveto]
 329  11908                           ADD s9[xpos], 08[alien_x_dim]
 32A  20404                           CALL 404[drawto]
 32B  11A02                           ADD sA[ypos], 02[alien_y_dim]
 32C  20404                           CALL 404[drawto]
 32D  19908                           SUB s9[xpos], 08[alien_x_dim]
 32E  20404                           CALL 404[drawto]
 32F  19A02                           SUB sA[ypos], 02[alien_y_dim]
 330  20404                           CALL 404[drawto]
 331  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 23st alien
 332  11F60                           ADD sF[scratch], 60
 333  009F0                           LOAD s9[xpos], sF[scratch]
 334  0BF01                           FETCH sF[scratch], 01[alien_y]
 335  11F10                           ADD sF[scratch], 10
 336  00AF0                           LOAD sA[ypos], sF[scratch]
 337  20401                           CALL 401[moveto]
 338  11908                           ADD s9[xpos], 08[alien_x_dim]
 339  20404                           CALL 404[drawto]
 33A  11A02                           ADD sA[ypos], 02[alien_y_dim]
 33B  20404                           CALL 404[drawto]
 33C  19908                           SUB s9[xpos], 08[alien_x_dim]
 33D  20404                           CALL 404[drawto]
 33E  19A02                           SUB sA[ypos], 02[alien_y_dim]
 33F  20404                           CALL 404[drawto]
 340  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 24st alien
 341  11F70                           ADD sF[scratch], 70
 342  009F0                           LOAD s9[xpos], sF[scratch]
 343  0BF01                           FETCH sF[scratch], 01[alien_y]
 344  11F10                           ADD sF[scratch], 10
 345  00AF0                           LOAD sA[ypos], sF[scratch]
 346  20401                           CALL 401[moveto]
 347  11908                           ADD s9[xpos], 08[alien_x_dim]
 348  20404                           CALL 404[drawto]
 349  11A02                           ADD sA[ypos], 02[alien_y_dim]
 34A  20404                           CALL 404[drawto]
 34B  19908                           SUB s9[xpos], 08[alien_x_dim]
 34C  20404                           CALL 404[drawto]
 34D  19A02                           SUB sA[ypos], 02[alien_y_dim]
 34E  20404                           CALL 404[drawto]
 34F  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 25st alien
 350  009F0                           LOAD s9[xpos], sF[scratch]
 351  0BF01                           FETCH sF[scratch], 01[alien_y]
 352  11F18                           ADD sF[scratch], 18
 353  00AF0                           LOAD sA[ypos], sF[scratch]
 354  20401                           CALL 401[moveto]
 355  11908                           ADD s9[xpos], 08[alien_x_dim]
 356  20404                           CALL 404[drawto]
 357  11A02                           ADD sA[ypos], 02[alien_y_dim]
 358  20404                           CALL 404[drawto]
 359  19908                           SUB s9[xpos], 08[alien_x_dim]
 35A  20404                           CALL 404[drawto]
 35B  19A02                           SUB sA[ypos], 02[alien_y_dim]
 35C  20404                           CALL 404[drawto]
 35D  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 26st alien
 35E  11F10                           ADD sF[scratch], 10
 35F  009F0                           LOAD s9[xpos], sF[scratch]
 360  0BF01                           FETCH sF[scratch], 01[alien_y]
 361  11F18                           ADD sF[scratch], 18
 362  00AF0                           LOAD sA[ypos], sF[scratch]
 363  20401                           CALL 401[moveto]
 364  11908                           ADD s9[xpos], 08[alien_x_dim]
 365  20404                           CALL 404[drawto]
 366  11A02                           ADD sA[ypos], 02[alien_y_dim]
 367  20404                           CALL 404[drawto]
 368  19908                           SUB s9[xpos], 08[alien_x_dim]
 369  20404                           CALL 404[drawto]
 36A  19A02                           SUB sA[ypos], 02[alien_y_dim]
 36B  20404                           CALL 404[drawto]
 36C  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 27st alien
 36D  11F20                           ADD sF[scratch], 20
 36E  009F0                           LOAD s9[xpos], sF[scratch]
 36F  0BF01                           FETCH sF[scratch], 01[alien_y]
 370  11F18                           ADD sF[scratch], 18
 371  00AF0                           LOAD sA[ypos], sF[scratch]
 372  20401                           CALL 401[moveto]
 373  11908                           ADD s9[xpos], 08[alien_x_dim]
 374  20404                           CALL 404[drawto]
 375  11A02                           ADD sA[ypos], 02[alien_y_dim]
 376  20404                           CALL 404[drawto]
 377  19908                           SUB s9[xpos], 08[alien_x_dim]
 378  20404                           CALL 404[drawto]
 379  19A02                           SUB sA[ypos], 02[alien_y_dim]
 37A  20404                           CALL 404[drawto]
 37B  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 28st alien
 37C  11F30                           ADD sF[scratch], 30
 37D  009F0                           LOAD s9[xpos], sF[scratch]
 37E  0BF01                           FETCH sF[scratch], 01[alien_y]
 37F  11F18                           ADD sF[scratch], 18
 380  00AF0                           LOAD sA[ypos], sF[scratch]
 381  20401                           CALL 401[moveto]
 382  11908                           ADD s9[xpos], 08[alien_x_dim]
 383  20404                           CALL 404[drawto]
 384  11A02                           ADD sA[ypos], 02[alien_y_dim]
 385  20404                           CALL 404[drawto]
 386  19908                           SUB s9[xpos], 08[alien_x_dim]
 387  20404                           CALL 404[drawto]
 388  19A02                           SUB sA[ypos], 02[alien_y_dim]
 389  20404                           CALL 404[drawto]
 38A  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 29st alien
 38B  11F40                           ADD sF[scratch], 40
 38C  009F0                           LOAD s9[xpos], sF[scratch]
 38D  0BF01                           FETCH sF[scratch], 01[alien_y]
 38E  11F18                           ADD sF[scratch], 18
 38F  00AF0                           LOAD sA[ypos], sF[scratch]
 390  20401                           CALL 401[moveto]
 391  11908                           ADD s9[xpos], 08[alien_x_dim]
 392  20404                           CALL 404[drawto]
 393  11A02                           ADD sA[ypos], 02[alien_y_dim]
 394  20404                           CALL 404[drawto]
 395  19908                           SUB s9[xpos], 08[alien_x_dim]
 396  20404                           CALL 404[drawto]
 397  19A02                           SUB sA[ypos], 02[alien_y_dim]
 398  20404                           CALL 404[drawto]
 399  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 30st alien
 39A  11F50                           ADD sF[scratch], 50
 39B  009F0                           LOAD s9[xpos], sF[scratch]
 39C  0BF01                           FETCH sF[scratch], 01[alien_y]
 39D  11F18                           ADD sF[scratch], 18
 39E  00AF0                           LOAD sA[ypos], sF[scratch]
 39F  20401                           CALL 401[moveto]
 3A0  11908                           ADD s9[xpos], 08[alien_x_dim]
 3A1  20404                           CALL 404[drawto]
 3A2  11A02                           ADD sA[ypos], 02[alien_y_dim]
 3A3  20404                           CALL 404[drawto]
 3A4  19908                           SUB s9[xpos], 08[alien_x_dim]
 3A5  20404                           CALL 404[drawto]
 3A6  19A02                           SUB sA[ypos], 02[alien_y_dim]
 3A7  20404                           CALL 404[drawto]
 3A8  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 31st alien
 3A9  11F60                           ADD sF[scratch], 60
 3AA  009F0                           LOAD s9[xpos], sF[scratch]
 3AB  0BF01                           FETCH sF[scratch], 01[alien_y]
 3AC  11F18                           ADD sF[scratch], 18
 3AD  00AF0                           LOAD sA[ypos], sF[scratch]
 3AE  20401                           CALL 401[moveto]
 3AF  11908                           ADD s9[xpos], 08[alien_x_dim]
 3B0  20404                           CALL 404[drawto]
 3B1  11A02                           ADD sA[ypos], 02[alien_y_dim]
 3B2  20404                           CALL 404[drawto]
 3B3  19908                           SUB s9[xpos], 08[alien_x_dim]
 3B4  20404                           CALL 404[drawto]
 3B5  19A02                           SUB sA[ypos], 02[alien_y_dim]
 3B6  20404                           CALL 404[drawto]
 3B7  0BF00                           FETCH sF[scratch], 00[alien_x]             ;draw 32st alien
 3B8  11F70                           ADD sF[scratch], 70
 3B9  009F0                           LOAD s9[xpos], sF[scratch]
 3BA  0BF01                           FETCH sF[scratch], 01[alien_y]
 3BB  11F18                           ADD sF[scratch], 18
 3BC  00AF0                           LOAD sA[ypos], sF[scratch]
 3BD  20401                           CALL 401[moveto]
 3BE  11908                           ADD s9[xpos], 08[alien_x_dim]
 3BF  20404                           CALL 404[drawto]
 3C0  11A02                           ADD sA[ypos], 02[alien_y_dim]
 3C1  20404                           CALL 404[drawto]
 3C2  19908                           SUB s9[xpos], 08[alien_x_dim]
 3C3  20404                           CALL 404[drawto]
 3C4  19A02                           SUB sA[ypos], 02[alien_y_dim]
 3C5  20404                           CALL 404[drawto]
 3C6  25000                           RETURN 
 3C7                    draw_gameend: 
 3C7  01948                           LOAD s9[xpos], 48                          ; draw letter d
 3C8  01A50                           LOAD sA[ypos], 50
 3C9  20401                           CALL 401[moveto]
 3CA  01948                           LOAD s9[xpos], 48
 3CB  01A90                           LOAD sA[ypos], 90
 3CC  20404                           CALL 404[drawto]
 3CD  01928                           LOAD s9[xpos], 28
 3CE  01A90                           LOAD sA[ypos], 90
 3CF  20404                           CALL 404[drawto]
 3D0  01928                           LOAD s9[xpos], 28
 3D1  01A70                           LOAD sA[ypos], 70
 3D2  20404                           CALL 404[drawto]
 3D3  01948                           LOAD s9[xpos], 48
 3D4  01A70                           LOAD sA[ypos], 70
 3D5  20404                           CALL 404[drawto]
 3D6  01958                           LOAD s9[xpos], 58                          ; draw letter o
 3D7  01A70                           LOAD sA[ypos], 70
 3D8  20401                           CALL 401[moveto]
 3D9  01958                           LOAD s9[xpos], 58
 3DA  01A90                           LOAD sA[ypos], 90
 3DB  20404                           CALL 404[drawto]
 3DC  01978                           LOAD s9[xpos], 78
 3DD  01A90                           LOAD sA[ypos], 90
 3DE  20404                           CALL 404[drawto]
 3DF  01978                           LOAD s9[xpos], 78
 3E0  01A70                           LOAD sA[ypos], 70
 3E1  20404                           CALL 404[drawto]
 3E2  01958                           LOAD s9[xpos], 58
 3E3  01A70                           LOAD sA[ypos], 70
 3E4  20404                           CALL 404[drawto]
 3E5  01988                           LOAD s9[xpos], 88                          ; draw letter n
 3E6  01A90                           LOAD sA[ypos], 90
 3E7  20401                           CALL 401[moveto]
 3E8  01988                           LOAD s9[xpos], 88
 3E9  01A70                           LOAD sA[ypos], 70
 3EA  20404                           CALL 404[drawto]
 3EB  019A8                           LOAD s9[xpos], A8
 3EC  01A70                           LOAD sA[ypos], 70
 3ED  20404                           CALL 404[drawto]
 3EE  019A8                           LOAD s9[xpos], A8
 3EF  01A90                           LOAD sA[ypos], 90
 3F0  20404                           CALL 404[drawto]
 3F1  019D8                           LOAD s9[xpos], D8                          ; draw letter e
 3F2  01A90                           LOAD sA[ypos], 90
 3F3  20401                           CALL 401[moveto]
 3F4  019B8                           LOAD s9[xpos], B8
 3F5  01A90                           LOAD sA[ypos], 90
 3F6  20404                           CALL 404[drawto]
 3F7  019B8                           LOAD s9[xpos], B8
 3F8  01A70                           LOAD sA[ypos], 70
 3F9  20404                           CALL 404[drawto]
 3FA  019D8                           LOAD s9[xpos], D8
 3FB  01A70                           LOAD sA[ypos], 70
 3FC  20404                           CALL 404[drawto]
 3FD  019B8                           LOAD s9[xpos], B8
 3FE  01A90                           LOAD sA[ypos], 90
 3FF  20404                           CALL 404[drawto]
 400  25000                           RETURN 
 401                                  ;;============================================================================
 401                                  ;; Subroutine: moveto and drawto
 401                                  ;; The moveto routine uses the global variables xpos and ypos, and the drawto
 401                                  ;; routine uses these global variables as well as the endpoint coordinates in
 401                                  ;; the display controller.  Moveto simply copies xpos and ypos into endpoint
 401                                  ;; coordinates in the display controller, it does not draw anything.  The
 401                                  ;; drawto routine copies endpoint coordinates to startpoint coordinates (does
 401                                  ;; not matter if the endpoint was from an actual draw, or simply an update
 401                                  ;; by moveto) and then copies xpos and ypos into endpoint coordinates, then
 401                                  ;; starts a linedraw.
 401                                  ;;============================================================================
 401                          moveto: 
 401  2D902                           OUTPUT s9[xpos], 02[endx]                  ; copy global to hardware
 402  2DA03                           OUTPUT sA[ypos], 03[endy]                  ; copy global to hardware
 403  25000                           RETURN                                     ; return
 404                          drawto: 
 404  09F02                           INPUT sF[scratch], 02[endx]                ; read hardware
 405  2DF00                           OUTPUT sF[scratch], 00[stax]               ; write hardware
 406  2D902                           OUTPUT s9[xpos], 02[endx]                  ; copy global to hardware
 407  09F03                           INPUT sF[scratch], 03[endy]                ; read hardware
 408  2DF01                           OUTPUT sF[scratch], 01[stay]               ; write hardware
 409  2DA03                           OUTPUT sA[ypos], 03[endy]                  ; copy global to hardware
 40A  01F01                           LOAD sF[scratch], 01[busy_go]              ; prepare the command
 40B  2DF04                           OUTPUT sF[scratch], 04[busy]               ; send the command
 40C  20012                           CALL 012[hw_init_wait]                     ; wait line draw done
 40D  25000                           RETURN                                     ; return
 40E                                  ;;============================================================================
 40E                                  ;; Interrupt - Vector.
 40E                                  ;;============================================================================
 7FF                                  ADDRESS 7FF                                ; must be located here
 7FF                      isr_vector: 
 7FF  22004                           JUMP 004[isr]                              ; always jump to isr
 800                                  ;;============================================================================
 800                                  ;;
 800                                  ;;============================================================================



List of PSM files that have been assembled

C:\Users\Jacky\FPGA_Space_Invaders\software\software.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   04'd         
 timestamp_minutes 01'd         
 timestamp_seconds 21'd         
 datestamp_year    16'd         
 datestamp_month   12'd         
 datestamp_day     07'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 stax              00           software.psm
 stay              01           software.psm
 endx              02           software.psm
 endy              03           software.psm
 busy              04           software.psm
 beam              05           software.psm
 mode              06           software.psm
 prng              07           software.psm
 leds_lo           08           software.psm
 leds_hi           09           software.psm
 qssd_lo           0A           software.psm
 qssd_hi           0B           software.psm
 qssd_dp           0C           software.psm
 switches_lo       0D           software.psm
 switches_hi       0E           software.psm
 buttons           0F           software.psm
 busy_go           01           software.psm
 beam_hi           0F           software.psm
 beam_md           07           software.psm
 beam_lo           03           software.psm
 mode_hld          00           software.psm
 mode_clr          01           software.psm
 mode_lin          02           software.psm
 mode_exp          03           software.psm
 buttons_ct        10           software.psm
 buttons_up        08           software.psm
 buttons_dn        04           software.psm
 buttons_lf        02           software.psm
 buttons_rt        01           software.psm
 gs_major_attrone  00           software.psm
 gs_major_attrtwo  01           software.psm
 gs_major_playing  02           software.psm
 gs_major_gameend  03           software.psm
 gs_minor_begins   00           software.psm
 gs_minor_twosec   78           software.psm
 gs_minor_onesec   3C           software.psm
 gs_minor_getrdy   1E           software.psm
 gs_tbullet_xdim   00           software.psm
 gs_tbullet_ydim   05           software.psm
 gs_tbullet_speed  08           software.psm
 gs_tanky          F4           software.psm
 gs_tank_xdim      10           software.psm
 gs_tank_ydim      08           software.psm
 gs_tank_speed     02           software.psm
 shield1hit        40           software.psm
 shield2hit        10           software.psm
 shield3hit        04           software.psm
 shield4hit        01           software.psm
 shieldxdim        18           software.psm
 shieldydim        14           software.psm
 shield1x          10           software.psm
 shield2x          52           software.psm
 shield3x          95           software.psm
 shield4x          D7           software.psm
 shieldy           E0           software.psm
 alien_x           00           software.psm
 alien_y           01           software.psm
 alien_1_hp        02           software.psm
 alien_2_hp        03           software.psm
 alien_3_hp        04           software.psm
 alien_4_hp        05           software.psm
 alien_5_hp        06           software.psm
 alien_x_dim       08           software.psm
 alien_y_dim       02           software.psm
 minusone          FF           software.psm
 minusmax          80           software.psm
 plusmax           7F           software.psm
 zero              00           software.psm
 one               01           software.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.51"        
 datestamp$        "07 Dec 2016"  
 timestamp$        "04:01:21"     



List of line labels

   Label                     Addr  Source PSM File

 * boot                      000   software.psm
   main                      003   software.psm
   isr                       004   software.psm
   hw_init                   008   software.psm
   hw_init_wait              012   software.psm
   gs_init                   016   software.psm
   user_input                027   software.psm
   calc_next_gs              029   software.psm
   calc_attrone              032   software.psm
   calc_attrtwo              038   software.psm
   initial_positions         03E   software.psm
   calc_playing              04C   software.psm
   upd_aliens                053   software.psm
   upd_aliens_x_right        060   software.psm
   upd_aliens_x_left         064   software.psm
   upd_aliens_y              068   software.psm
   upd_tank                  06C   software.psm
   upd_tank_lt               07B   software.psm
   upd_tank_rt               07F   software.psm
   load_tbullet_en           086   software.psm
   upd_tbullet               088   software.psm
   upd_tbullet_loop          089   software.psm
   restart_upd_bullet_loop   08F   software.psm
   reset_tbullet             090   software.psm
   check_shield              098   software.psm
   check_shield1             0A9   software.psm
   check_shield2             0B1   software.psm
   check_shield3             0B9   software.psm
   check_shield4             0C1   software.psm
   calc_gameend              0C9   software.psm
   goto_attrone              0CD   software.psm
   goto_attrtwo              0D0   software.psm
   goto_gameend              0D3   software.psm
   draw_gs                   0D6   software.psm
   draw_gs_debug             0E0   software.psm
   draw_attrone              0E3   software.psm
   draw_attrtwo              120   software.psm
   draw_playing              13C   software.psm
   draw_gameend              3C7   software.psm
   moveto                    401   software.psm
   drawto                    404   software.psm
 * isr_vector                7FF   software.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD            297
 STAR              -

 AND               -
 OR                -
 XOR               1

 ADD             165
 ADDCY             1
 SUB              95
 SUBCY             1

 TEST              6
 TESTCY            -
 COMPARE          32
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               1
 SRA               -
 RR                -

 REGBANK           -

 INPUT             4
 OUTPUT           16
 OUTPUTK           -

 STORE            70
 FETCH            70

 DISABLE           -
 ENABLE            1
 RETURNI           1

 JUMP             32
 JUMP@             -
 CALL            269
 CALL@             -
 RETURN           37
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
